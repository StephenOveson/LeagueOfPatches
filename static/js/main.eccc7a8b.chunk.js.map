{"version":3,"sources":["pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","useState","current","setCurrent","patches","setPatches","changes","setChanges","buffsNerfs","setBuffsNerfs","useEffect","$","ajax","method","url","then","data","Promise","all","Array","keys","map","i","responses","patchData","r","Object","values","comparePatches","filter","champ","hp","hpperlevel","mp","mpperlevel","movespeed","armor","armorperlevel","spellblock","spellblockperlevel","attackrange","hpregen","hpregenperlevel","mpregen","mpregenperlevel","crit","critperlevel","attackdamage","attackdamageperlevel","attackspeedperlevel","attackspeed","currentPatch","forEach","name","stats","patchOneNotes","changeObj","attrArr","entries","key","value","oldKey","oldValue","attr","className","href","type","placeholder","aria-label","aria-describedby","onChange","target","toLowerCase","includes","src","alt","title","tags","join","style","width","info","attack","role","aria-valuenow","aria-valuemin","aria-valuemax","defense","magic","difficulty","blurb","onClick","hasClass","removeClass","addClass","id","change","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eccc7a8b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport $ from 'jquery'\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n    const [current, setCurrent] = useState([])\r\n    const [patches, setPatches] = useState([[], []])\r\n    const [changes, setChanges] = useState([])\r\n    const [buffsNerfs, setBuffsNerfs] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'https://ddragon.leagueoflegends.com/api/versions.json'\r\n        }).then((data) => {\r\n            Promise.all([...Array(6).keys()].map(i =>\r\n                $.ajax({\r\n                    method: 'GET',\r\n                    url: 'https://ddragon.leagueoflegends.com/cdn/' + data[i] + '/data/en_US/champion.json'\r\n                }))).then(responses => {\r\n                    let patchData = responses.map(r => Object.values(r.data));\r\n                    setPatches(patchData);\r\n                    setCurrent(patchData[0]);\r\n                });\r\n        });\r\n    }, [])\r\n\r\n    useEffect(() => comparePatches(), [patches])\r\n\r\n    useEffect(() => {\r\n        setBuffsNerfs(changes.filter(champ =>\r\n            champ[1].hp > 0 || champ[1].hp < 0 ||\r\n            champ[1].hpperlevel > 0 || champ[1].hpperlevel < 0 ||\r\n            champ[1].mp > 0 || champ[1].mp < 0 ||\r\n            champ[1].mpperlevel > 0 || champ[1].mpperlevel < 0 ||\r\n            champ[1].movespeed > 0 || champ[1].movespeed < 0 ||\r\n            champ[1].armor > 0 || champ[1].armor < 0 ||\r\n            champ[1].armorperlevel > 0 || champ[1].armorperlevel < 0 ||\r\n            champ[1].spellblock > 0 || champ[1].spellblock < 0 ||\r\n            champ[1].spellblockperlevel > 0 || champ[1].spellblockperlevel < 0 ||\r\n            champ[1].attackrange > 0 || champ[1].attackrange < 0 ||\r\n            champ[1].hpregen > 0 || champ[1].hpregen < 0 ||\r\n            champ[1].hpregenperlevel > 0 || champ[1].hpregenperlevel < 0 ||\r\n            champ[1].mpregen > 0 || champ[1].mpregen < 0 ||\r\n            champ[1].mpregenperlevel > 0 || champ[1].mpregenperlevel < 0 ||\r\n            champ[1].crit > 0 || champ[1].crit < 0 ||\r\n            champ[1].critperlevel > 0 || champ[1].critperlevel < 0 ||\r\n            champ[1].attackdamage > 0 || champ[1].attackdamage < 0 ||\r\n            champ[1].attackdamageperlevel > 0 || champ[1].attackdamageperlevel < 0 ||\r\n            champ[1].attackspeedperlevel > 0 || champ[1].attackspeedperlevel < 0 ||\r\n            champ[1].attackspeed > 0 || champ[1].attackspeed < 0))\r\n    }, [changes])\r\n\r\n    const comparePatches = () => {\r\n        const currentPatch = {}\r\n        patches[0].forEach(champ => {\r\n            if (!currentPatch[champ.name]) currentPatch[champ.name] = champ.stats\r\n        })\r\n        const patchOneNotes = {}\r\n        patches[1].forEach(champ => {\r\n            if (!patchOneNotes[champ.name]) patchOneNotes[champ.name] = champ.stats\r\n        })\r\n\r\n        const changeObj = {}\r\n\r\n        const attrArr = ['hp', 'hpperlevel', 'mp', 'mpperlevel', 'movespeed', 'armor', 'armorperlevel', 'spellblock', 'spellblockperlevel', 'attackrange', 'hpregen',\r\n            'hpregenperlevel', 'mpregen', 'mpregenperlevel', 'crit', 'critperlevel', 'attackdamage', 'attackdamageperlevel', 'attackspeedperlevel', 'attackspeed']\r\n        if (currentPatch !== patchOneNotes) {\r\n            for (let [key, value] of Object.entries(currentPatch)) {\r\n                for (let [oldKey, oldValue] of Object.entries(patchOneNotes)) {\r\n                    for (let attr of attrArr) {\r\n                        if (key === oldKey) {\r\n                            if (value[attr] !== oldValue[attr]) {\r\n                                changeObj[key] = { ...changeObj[key], [attr]: value[attr] - oldValue[attr] }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setChanges(Object.entries(changeObj))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-dark mb-3 navNeu\">\r\n                <a className=\"navbar-brand\" href=\"/\">League of Patches</a>\r\n            </nav>\r\n\r\n            <div className=\"container m-auto\">\r\n                <div className=\"input-group mb-3 neu\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search A Champion\" aria-label=\"Example text with button addon\" aria-describedby=\"button-addon1\"\r\n                        onChange={({ target: { value } }) => setCurrent(patches[0].filter((champ) => champ.name.toLowerCase().includes(value.toLowerCase())))} />\r\n                </div>\r\n                <div className=\"row m-auto\">\r\n                    {current && current.map(champ =>\r\n                            <div className=\"card col-md-6 col-sm-12 background\" key={champ.key}>\r\n                                <div className=\"row no-gutters\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row mb-3\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <img\r\n                                                        src={'https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-icons/' + champ.key + '.png'}\r\n                                                        className=\"card-img radius m-auto\" alt={champ.name} />\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <h4 className=\"card-title\">{champ.name}</h4>\r\n                                                    <h5 className=\"card-subtitle mb-2 text-muted\">{champ.title}</h5>\r\n                                                    <p className=\"card-text\"><small className=\"\" value={champ.tags.join(' ')}>{champ.tags.join(', ')}</small></p>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"progress mb-1 col-md-12\">\r\n                                                            <div className=\"progress-bar bg-danger\" style={{ width: champ.info.attack * 10 + '%' }} role=\"progressbar\" aria-valuenow={champ.info.attack} aria-valuemin=\"0\" aria-valuemax=\"10\">Attack</div>\r\n                                                        </div>\r\n                                                        <div className=\"progress mb-1 col-md-12\">\r\n                                                            <div className=\"progress-bar bg-success\" style={{ width: champ.info.defense * 10 + '%' }} role=\"progressbar\" aria-valuenow={champ.info.attack} aria-valuemin=\"0\" aria-valuemax=\"10\">Defense</div>\r\n                                                        </div>\r\n                                                        <div className=\"progress mb-1 col-md-12\">\r\n                                                            <div className=\"progress-bar bg-primary\" style={{ width: champ.info.magic * 10 + '%' }} role=\"progressbar\" aria-valuenow={champ.info.attack} aria-valuemin=\"0\" aria-valuemax=\"10\">Magic</div>\r\n                                                        </div>\r\n                                                        <div className=\"progress mb-1 col-md-12\">\r\n                                                            <div className=\"progress-bar bg-secondary\" style={{ width: champ.info.difficulty * 10 + '%' }} role=\"progressbar\" aria-valuenow={champ.info.attack} aria-valuemin=\"0\" aria-valuemax=\"10\">Difficulty</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <p className=\"card-text\">{champ.blurb}</p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n\r\n                                                <div className=\"container col-md-5\">\r\n\r\n                                                </div>\r\n                                                <div className=\"col-md-5 mb-3\">\r\n                                                    <button className=\"btn btn-lg btn-block button-neu\"\r\n                                                        onClick={() => $('#' + champ.key).hasClass('hidden') ? $('#' + champ.key).removeClass('hidden') : $('#' + champ.key).addClass('hidden')}>Stats</button>\r\n                                                </div>\r\n                                                <div className=\"col-md-12 hidden\" id={champ.key}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <ul className=\"list-group \">\r\n                                                                <li className=\"list-group-item neuLess\">{`HP: ${champ.stats.hp}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`HP/Level: ${champ.stats.hpperlevel}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`MP: ${champ.stats.mp}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`MP/Level: ${champ.stats.mpperlevel}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`MP Regen: ${champ.stats.mpregen}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`MP Regen/Level: ${champ.stats.mpregenperlevel}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`Armor: ${champ.stats.armor}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`Armor/Level: ${champ.stats.armorperlevel}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`MR: ${champ.stats.spellblock}`}</li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <ul className=\"list-group \">\r\n                                                                <li className=\"list-group-item neuLess\">{`MR/Level: ${champ.stats.spellblockperlevel}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`MS: ${champ.stats.movespeed}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`Attack Range: ${champ.stats.attackrange}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`Crit: ${champ.stats.crit}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`Crit/Level: ${champ.stats.critperlevel}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`AD: ${champ.stats.attackdamage}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`AD/Level: ${champ.stats.attackdamageperlevel}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`AS: ${champ.stats.attackspeed}`}</li>\r\n                                                                <li className=\"list-group-item neuLess\">{`AS/Level: ${champ.stats.attackspeedperlevel}`}</li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {buffsNerfs && buffsNerfs.map(change =>\r\n                                            champ.name === change[0] ?\r\n                                                <div className=\"row\" key={change[0]}>\r\n                                                    <h3>Changes from previous patch</h3>\r\n                                                    <div className=\"col-md-12 alert-success\">\r\n                                                        <ul>\r\n                                                            {change[1].hp && <li>HP: {change[1].hp}</li>}\r\n                                                            {change[1].hpperlevel && <li>HP Per Level: {change[1].hpperlevel}</li>}\r\n                                                            {change[1].mp && <li>MP: {change[1].mp}</li>}\r\n                                                            {change[1].mpperlevel && <li>MP Per Level: {change[1].mpperlevel}</li>}\r\n                                                            {change[1].mpregen && <li>MP Regen: {change[1].mpregen}</li>}\r\n                                                            {change[1].mpregenperlevel && <li>MP Regen Per Level: {change[1].mpregenperlevel}</li>}\r\n                                                            {change[1].armor && <li>Armor: {change[1].armor}</li>}\r\n                                                            {change[1].armorperlevel && <li>Armor Per Level: {change[1].armorperlevel}</li>}\r\n                                                            {change[1].spellblock && <li>Spell Block: {change[1].spellblock}</li>}\r\n                                                            {change[1].spellblockperlevel && <li>Spell Block Per Level: {change[1].spellblockperlevel}</li>}\r\n                                                            {change[1].movespeed && <li>Move Speed: {change[1].movespeed}</li>}\r\n                                                            {change[1].attackrange && <li>Attack Range {change[1].attackrange}</li>}\r\n                                                            {change[1].attackdamage && <li>Attack Damage: {change[1].attackdamage}</li>}\r\n                                                            {change[1].attackdamageperlevel && <li>Attack Damage Per Level: {change[1].attackdamageperlevel}</li>}\r\n                                                            {change[1].attackspeed && <li>Attack Speed: {change[1].attackspeed}</li>}\r\n                                                            {change[1].attackspeedperlevel && <li>Attack Speed Per Level: {change[1].attackspeedperlevel}</li>}\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div> : null\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport Home from '../src/pages/Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}