{"version":3,"sources":["pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","useState","current","setCurrent","patches","setPatches","changes","setChanges","buffsNerfs","setBuffsNerfs","attrArr","useEffect","$","ajax","method","url","then","data","Promise","all","Array","keys","map","i","responses","patchData","r","Object","values","comparePatches","filter","champ","some","x","currentPatch","forEach","name","stats","patchOneNotes","changeObj","entries","key","value","oldKey","oldValue","attr","className","href","type","placeholder","aria-label","aria-describedby","onChange","target","toLowerCase","includes","src","alt","title","tags","join","style","width","info","attack","role","aria-valuenow","aria-valuemin","aria-valuemax","defense","magic","difficulty","diffi","blurb","onClick","hasClass","removeClass","addClass","id","hp","hpperlevel","mp","mpperlevel","mpregen","mpregenperlevel","armor","armorperlevel","spellblock","spellblockperlevel","movespeed","attackrange","crit","critperlevel","attackdamage","attackdamageperlevel","attackspeed","attackspeedperlevel","change","listStyle","class","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7deff704.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport $ from 'jquery'\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n    const [current, setCurrent] = useState([])\r\n    const [patches, setPatches] = useState([[], []])\r\n    const [changes, setChanges] = useState([])\r\n    const [buffsNerfs, setBuffsNerfs] = useState([])\r\n\r\n    const attrArr = ['hp', 'hpperlevel', 'mp', 'mpperlevel', 'movespeed', 'armor', 'armorperlevel', 'spellblock', 'spellblockperlevel', 'attackrange', 'hpregen',\r\n        'hpregenperlevel', 'mpregen', 'mpregenperlevel', 'crit', 'critperlevel', 'attackdamage', 'attackdamageperlevel', 'attackspeedperlevel', 'attackspeed']\r\n\r\n\r\n    useEffect(() => {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'https://ddragon.leagueoflegends.com/api/versions.json'\r\n        }).then((data) => {\r\n            Promise.all([...Array(6).keys()].map(i =>\r\n                $.ajax({\r\n                    method: 'GET',\r\n                    url: 'https://ddragon.leagueoflegends.com/cdn/' + data[i] + '/data/en_US/championFull.json'\r\n                }))).then(responses => {\r\n                    let patchData = responses.map(r => Object.values(r.data));\r\n                    setPatches(patchData);\r\n                    setCurrent(patchData[0]);\r\n                });\r\n        });\r\n    }, [])\r\n\r\n    useEffect(() => comparePatches(), [patches])\r\n\r\n    useEffect(() => {\r\n        setBuffsNerfs(changes.filter(champ => Object.values(champ[1]).some(x => x)))\r\n    }, [changes])\r\n\r\n    const comparePatches = () => {\r\n        const currentPatch = {}\r\n        patches[0].forEach(champ => {\r\n            if (!currentPatch[champ.name]) currentPatch[champ.name] = champ.stats\r\n        })\r\n        const patchOneNotes = {}\r\n        patches[1].forEach(champ => {\r\n            if (!patchOneNotes[champ.name]) patchOneNotes[champ.name] = champ.stats\r\n        })\r\n\r\n        const changeObj = {}\r\n\r\n\r\n        if (currentPatch !== patchOneNotes) {\r\n            for (let [key, value] of Object.entries(currentPatch)) {\r\n                for (let [oldKey, oldValue] of Object.entries(patchOneNotes)) {\r\n                    for (let attr of attrArr) {\r\n                        if (key === oldKey) {\r\n                            if (value[attr] !== oldValue[attr]) {\r\n                                changeObj[key] = { ...changeObj[key], [attr]: value[attr] - oldValue[attr] }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setChanges(Object.entries(changeObj))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-dark mb-3 navNeu\">\r\n                <a className=\"navbar-brand\" href=\"/\">League of Patches</a>\r\n            </nav>\r\n\r\n            <div className=\"container m-auto\">\r\n                <div className=\"input-group mb-3 neu\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search A Champion\" aria-label=\"Example text with button addon\" aria-describedby=\"button-addon1\"\r\n                        onChange={({ target: { value } }) => setCurrent(patches[0].filter((champ) => champ.name.toLowerCase().includes(value.toLowerCase())))} />\r\n                </div>\r\n                <div className=\"row m-auto\">\r\n                    {current && current.map(champ =>\r\n                        <div className=\"card col-md-6 col-sm-12 background\" key={champ.key}>\r\n                            <div className=\"row no-gutters\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row mb-3\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <img\r\n                                                    src={'https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-icons/' + champ.key + '.png'}\r\n                                                    className=\"card-img radius m-auto\" alt={champ.name} />\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h4 className=\"card-title\">{champ.name}</h4>\r\n                                                <h5 className=\"card-subtitle mb-2 text-muted\">{champ.title}</h5>\r\n                                                <p className=\"card-text\"><small className=\"\" value={champ.tags.join(' ')}>{champ.tags.join(', ')}</small></p>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"progress mb-1\">\r\n                                                            <div className=\"progress-bar bg-danger\" style={{ width: champ.info.attack * 10 + '%' }} role=\"progressbar\" aria-valuenow={champ.info.attack} aria-valuemin=\"0\" aria-valuemax=\"10\">Attack</div>\r\n                                                        </div>\r\n                                                        <div className=\"progress mb-1\">\r\n                                                            <div className=\"progress-bar bg-success\" style={{ width: champ.info.defense * 10 + '%' }} role=\"progressbar\" aria-valuenow={champ.info.defense} aria-valuemin=\"0\" aria-valuemax=\"10\">Defense</div>\r\n                                                        </div>\r\n                                                        <div className=\"progress mb-1\">\r\n                                                            <div className=\"progress-bar bg-primary\" style={{ width: champ.info.magic * 10 + '%' }} role=\"progressbar\" aria-valuenow={champ.info.magic} aria-valuemin=\"0\" aria-valuemax=\"10\">Magic</div>\r\n                                                        </div>\r\n                                                        <div className=\"progress mb-1\">\r\n                                                            <div className=\"progress-bar bg-secondary\" style={{ width: champ.info.difficulty * 10 + '%' }} role=\"progressbar\" aria-valuenow={champ.info.diffi} aria-valuemin=\"0\" aria-valuemax=\"10\">Difficulty</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <p className=\"card-text\">{champ.blurb}</p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n\r\n                                            <div className=\"container col-md-5\">\r\n\r\n                                            </div>\r\n                                            <div className=\"col-md-5 mb-3\">\r\n                                                <button className=\"btn btn-lg btn-block button-neu\"\r\n                                                    onClick={() => $('#' + champ.key).hasClass('hidden') ? $('#' + champ.key).removeClass('hidden') : $('#' + champ.key).addClass('hidden')}>Stats</button>\r\n                                            </div>\r\n                                            <div className=\"col-md-12 hidden\" id={champ.key}>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <ul className=\"list-group \">\r\n                                                            <li className=\"list-group-item neuLess\">{`HP: ${champ.stats.hp}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`HP/Level: ${champ.stats.hpperlevel}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`MP: ${champ.stats.mp}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`MP/Level: ${champ.stats.mpperlevel}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`MP Regen: ${champ.stats.mpregen}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`MP Regen/Level: ${champ.stats.mpregenperlevel}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`Armor: ${champ.stats.armor}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`Armor/Level: ${champ.stats.armorperlevel}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`MR: ${champ.stats.spellblock}`}</li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <ul className=\"list-group \">\r\n                                                            <li className=\"list-group-item neuLess\">{`MR/Level: ${champ.stats.spellblockperlevel}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`MS: ${champ.stats.movespeed}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`Attack Range: ${champ.stats.attackrange}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`Crit: ${champ.stats.crit}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`Crit/Level: ${champ.stats.critperlevel}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`AD: ${champ.stats.attackdamage}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`AD/Level: ${champ.stats.attackdamageperlevel}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`AS: ${champ.stats.attackspeed}`}</li>\r\n                                                            <li className=\"list-group-item neuLess\">{`AS/Level: ${champ.stats.attackspeedperlevel}`}</li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {buffsNerfs && buffsNerfs.map(change =>\r\n                                        champ.name === change[0] ?\r\n                                            <div className=\"row\" key={change[0]}>\r\n                                                <div className=\"col-md-12\"><h3>Recent Changes</h3>\r\n                                                    <ul style={{ listStyle: 'none' }}>\r\n                                                        {attrArr.map(attr => change[1][attr] > 0 && <div>\r\n                                                            <div className=\"col-md-12 neu\">\r\n                                                                {change[1][attr] && <li><span><i class=\"far fa-plus-square\"></i></span> {attr}: {change[1][attr]}</li>}\r\n                                                            </div>\r\n                                                        </div>)}\r\n                                                    </ul>\r\n                                                    <ul style={{ listStyle: 'none' }}>\r\n                                                        {attrArr.map(attr => change[1][attr] < 0 && <div>\r\n                                                            <div className=\"col-md-12 neu\">\r\n                                                                {change[1][attr] && <li><span><i class=\"far fa-minus-square\"></i></span> {attr}: {change[1][attr]}</li>}\r\n                                                            </div>\r\n                                                        </div>)}\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div> : null\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport Home from '../src/pages/Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}